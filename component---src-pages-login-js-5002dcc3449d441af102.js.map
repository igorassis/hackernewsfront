{"version":3,"sources":["webpack:///./src/pages/login.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Header/index.js","webpack:///./src/components/layout.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./node_modules/@babel/runtime/regenerator/index.js"],"names":["Login","state","login","email","password","name","_confirm","_callee","_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default","a","wrap","_context","prev","next","stop","_saveUserData","token","render","_this2","this","_this$state","react__WEBPACK_IMPORTED_MODULE_5___default","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_6__","className","value","onChange","e","setState","target","type","placeholder","gatsby__WEBPACK_IMPORTED_MODULE_7__","to","onClick","Component","m","module","exports","require","default","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","__webpack_exports__","loader","enqueue","React","createContext","ProdPageRenderer","_ref","location","pageResources","InternalPageRenderer","Object","assign","json","StyledHeader","styled","header","withConfig","displayName","componentId","Div","div","H1","h1","H4","h4","StyledLink","Link","Header","siteTitle","react_default","style","margin","defaultProps","Layout","children","data","_856328897","Fragment","components_Header","site","siteMetadata","title","maxWidth","padding","paddingTop","Date","getFullYear","href","runtime","undefined","Op","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","GenStateSuspendedStart","method","arg","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","done","GenStateSuspendedYield","makeInvokeMethod","fn","obj","call","err","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","previousPromise","callInvokeWithMethodAndArg","Promise","resolve","reject","invoke","result","__await","then","unwrapped","error","TypeError","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","constructor","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","object","key","reverse","pop","skipTempReset","charAt","slice","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function"],"mappings":"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","file":"component---src-pages-login-js-5002dcc3449d441af102.js","sourcesContent":["import React, { Component } from 'react'\nimport Layout from \"../components/layout\"\nimport { Link } from 'gatsby'\n// import { AUTH_TOKEN } from '../constants'\n\nclass Login extends Component {\n  state = {\n    login: true, // switch between Login and SignUp\n    email: '',\n    password: '',\n    name: '',\n  }\n\n  render() {\n    const { login, email, password, name } = this.state\n    return (\n      <Layout>\n        <h4 className=\"mv3\">{login ? 'Login' : 'Sign Up'}</h4>\n        <div className=\"flex flex-column\">\n          {!login && (\n            <input\n              value={name}\n              onChange={e => this.setState({ name: e.target.value })}\n              type=\"text\"\n              placeholder=\"Your name\"\n            />\n          )}\n          <input\n            value={email}\n            onChange={e => this.setState({ email: e.target.value })}\n            type=\"text\"\n            placeholder=\"Your email address\"\n          />\n          <input\n            value={password}\n            onChange={e => this.setState({ password: e.target.value })}\n            type=\"password\"\n            placeholder=\"Choose a safe password\"\n          />\n        </div>\n        <div className=\"flex mt3\">\n          {/* <div className=\"pointer mr2 button\" onClick={() => this._confirm()}>\n            {login ? 'login' : 'create account'}\n          </div> */}\n          <Link to=\"/home\">Login</Link>\n          <div\n            className=\"pointer button\"\n            onClick={() => this.setState({ login: !login })}\n          >\n            {login\n              ? 'need to create an account?'\n              : 'already have an account?'}\n          </div>\n        </div>\n      </Layout>\n    )\n  }\n\n  _confirm = async () => {\n    // ... you'll implement this 🔜\n  }\n\n  _saveUserData = token => {\n    // localStorage.setItem(AUTH_TOKEN, token)\n  }\n}\n\nexport default Login","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport styled from 'styled-components'\n\nconst StyledHeader = styled.header`\n  background: orange;\n  margin-bottom: 1.45rem;\n`;\n\nconst Div = styled.div`\n  margin: 0 auto;\n  max-width: 960;\n  padding: 1.45rem 1.0875rem;\n`;\n\nconst H1 = styled.h1`\n  margin: 0;\n`;\nconst H4 = styled.h4`\n  margin: 0;\n`;\n\nconst StyledLink = styled(Link)`\n  color: white;\n  text-decoration: none;\n`;\n\nconst Header = ({ siteTitle }) => (\n  <StyledHeader>\n    <Div>\n      <H1 style={{ margin: 0 }}>\n        <StyledLink to=\"/\">\n          {siteTitle}\n        </StyledLink>\n      </H1>\n      <StyledLink to=\"/CreateLink/\"><H4>NEW POST <span> ✏️</span></H4></StyledLink>\n      <StyledLink to=\"/search/\"><H4>Search <span> 🔎</span></H4></StyledLink>\n    </Div>\n  </StyledHeader>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./Header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0px 1.0875rem 1.45rem`,\n          paddingTop: 0,\n        }}\n      >\n        <main>{children}</main>\n        <footer>\n          © {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","require(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es6.promise\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.object.set-prototype-of\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.object.create\");\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\n/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar runtime = function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n    return generator;\n  }\n\n  exports.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\"; // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n\n  var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n\n\n  var IteratorPrototype = {};\n\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\n  if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = \"GeneratorFunction\"; // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      prototype[method] = function (arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function (genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can\n    // do is to check its .name property.\n    (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n  };\n\n  exports.mark = function (genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  }; // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n\n\n  exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n\n        if (value && typeof value === \"object\" && hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function (value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function (err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function (unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function (error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = // If enqueue has been called before, then we want to wait until\n      // all previous Promises have been resolved before calling invoke,\n      // so that results are always delivered in the correct order. If\n      // enqueue has not been called before, then it is important to\n      // call invoke immediately, without waiting on a callback to fire,\n      // so that the async generator function has the opportunity to do\n      // any necessary setup in a predictable way. This predictability\n      // is why the Promise constructor synchronously invokes its\n      // executor callback, and why async functions synchronously\n      // execute code before the first await. Since we implement simple\n      // async functions in terms of async generators, it is especially\n      // important to get this right, even though it requires care.\n      previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later\n      // invocations of the iterator.\n      callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    } // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n\n\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n\n  exports.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n\n  exports.async = function (innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList));\n    return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n    : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        } // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\n\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n        var record = tryCatch(innerFn, self, context);\n\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted; // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  } // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (!info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).\n\n      context.next = delegate.nextLoc; // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    } // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n\n\n    context.delegate = null;\n    return ContinueSentinel;\n  } // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n\n\n  defineIteratorMethods(Gp);\n  Gp[toStringTagSymbol] = \"Generator\"; // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n\n  Gp[iteratorSymbol] = function () {\n    return this;\n  };\n\n  Gp.toString = function () {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    keys.reverse(); // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      } // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n\n\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n          return next;\n        };\n\n        return next.next = next;\n      }\n    } // Return an iterator with no values.\n\n\n    return {\n      next: doneResult\n    };\n  }\n\n  exports.values = values;\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: true\n    };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      this.prev = 0;\n      this.next = 0; // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n      this.method = \"next\";\n      this.arg = undefined;\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n    stop: function stop() {\n      this.done = true;\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" || record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      } // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  }; // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n\n  return exports;\n}( // If this script is executing as a CommonJS module, use module.exports\n// as the regeneratorRuntime namespace. Otherwise create a new empty\n// object. Either way, the resulting object will be used to initialize\n// the regeneratorRuntime variable at the top of this file.\ntypeof module === \"object\" ? module.exports : {});\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}","module.exports = require(\"regenerator-runtime\");\n"],"sourceRoot":""}