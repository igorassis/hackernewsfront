{"version":3,"sources":["webpack:///./src/components/Link/ListLink.js","webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Header/index.js","webpack:///./src/components/layout.js","webpack:///./src/components/Link/Link.js","webpack:///./src/components/Link/feedLinks.graphql"],"names":["StyledDiv","styled","div","withConfig","displayName","componentId","ListLink","render","react_default","a","createElement","react_apollo_esm","query","FEED_QUERY","_ref","loading","error","data","JSON","stringify","linksToRender","feed","links","map","link","Link","key","id","Component","HomePage","layout","ListLink_ListLink","m","module","exports","require","default","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","__webpack_exports__","loader","enqueue","React","createContext","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","StyledHeader","header","Div","H1","h1","H4","h4","StyledLink","Header","siteTitle","style","margin","to","defaultProps","Layout","children","_856328897","Fragment","components_Header","site","siteMetadata","title","maxWidth","padding","paddingTop","Date","getFullYear","href","StyledSpan","span","react__WEBPACK_IMPORTED_MODULE_1___default","this","props","description","url","doc","kind","definitions","operation","variableDefinitions","directives","selectionSet","selections","name","value","arguments","loc","start","end","source","body","locationOffset","line","column","definitionRefs","forEach","def","refs","Set","collectFragmentReferences","node","add","type","selection"],"mappings":"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","file":"component---src-pages-index-js-40a31bf0b5a86172cfba.js","sourcesContent":["import React, { Component } from \"react\"\nimport styled from 'styled-components'\nimport Link from \"./Link\"\nimport FEED_QUERY from \"./feedLinks.graphql\"\nimport { Query } from \"react-apollo\"\n\nconst StyledDiv = styled.div`\n  background-color: rgba(23, 42, 58, .06);\n`\n\nexport default class ListLink extends Component {\n  render() {\n    return (\n      <StyledDiv>\n        <Query query={FEED_QUERY}>\n          {({ loading, error, data }) => {\n            if (loading) return <div>Fetching...</div>\n            if (error) return <div>Error: {JSON.stringify(error)}</div>\n\n            const linksToRender = data.feed.links\n\n            return (\n              <div>\n                {linksToRender.map(link => (\n                  <Link key={link.id} link={link} />\n                ))}\n              </div>\n            )\n          }}\n        </Query>\n      </StyledDiv>\n    )\n  }\n}\n","import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport ListLink from \"../components/Link/ListLink\"\n// import Image from \"../components/image\"\n// import SEO from \"../components/seo\"\n\n\nconst HomePage = () => (\n  <Layout>\n    {/* <SEO title=\"Home\" /> */}\n    <ListLink />\n  </Layout>\n)\n\nexport default HomePage\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport styled from 'styled-components'\n\nconst StyledHeader = styled.header`\n  background: orange;\n  margin-bottom: 1.45rem;\n`;\n\nconst Div = styled.div`\n  margin: 0 auto;\n  max-width: 960;\n  padding: 1.45rem 1.0875rem;\n`;\n\nconst H1 = styled.h1`\n  margin: 0;\n`;\nconst H4 = styled.h4`\n  margin: 0;\n`;\n\nconst StyledLink = styled(Link)`\n  color: white;\n  text-decoration: none;\n`;\n\nconst Header = ({ siteTitle }) => (\n  <StyledHeader>\n    <Div>\n      <H1 style={{ margin: 0 }}>\n        <StyledLink to=\"/\">\n          {siteTitle}\n        </StyledLink>\n      </H1>\n      <StyledLink to=\"/CreateLink/\"><H4>NEW POST <span> ✏️</span></H4></StyledLink>\n      <StyledLink to=\"/search/\"><H4>Search <span> 🔎</span></H4></StyledLink>\n    </Div>\n  </StyledHeader>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./Header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0px 1.0875rem 1.45rem`,\n          paddingTop: 0,\n        }}\n      >\n        <main>{children}</main>\n        <footer>\n          © {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React, { Component } from \"react\"\nimport styled from 'styled-components'\n// import PropTypes from 'prop-types'\n\nconst StyledSpan = styled.span`\n  color: black;\n  font-family: Arial, Helvetica, sans-serif;\n  font-size: 16px;\n`\n\nexport default class Link extends Component {\n  render() {\n    return (\n      <div>\n        <div>\n          <StyledSpan>\n            {this.props.link.description} ({this.props.link.url})\n          </StyledSpan>\n        </div>\n      </div>\n    )\n  }\n}\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"variableDefinitions\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"feed\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"links\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createdAt\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"url\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"description\"},\"arguments\":[],\"directives\":[]}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":88}};\n    doc.loc.source = {\"body\":\"{\\n  feed {\\n    links {\\n      id\\n      createdAt\\n      url\\n      description\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n"],"sourceRoot":""}