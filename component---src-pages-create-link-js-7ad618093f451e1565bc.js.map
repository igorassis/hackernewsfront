{"version":3,"sources":["webpack:///./src/components/Link/CreateLink.js","webpack:///./src/pages/CreateLink.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Header/index.js","webpack:///./src/components/layout.js","webpack:///./src/components/Link/createLink.graphql"],"names":["StyledInput","styled","input","withConfig","displayName","componentId","StyledDiv","div","CreateLink","state","description","url","render","_this2","this","_this$state","react_default","a","createElement","className","value","onChange","e","setState","target","type","placeholder","react_apollo_esm","mutation","POST_MUTATION","variables","postMutation","onClick","Component","CreateLinkPage","layout","Link_CreateLink","gatsby_browser_entry","to","m","module","exports","require","default","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","__webpack_exports__","loader","enqueue","React","createContext","ProdPageRenderer","_ref","location","pageResources","InternalPageRenderer","Object","assign","json","StyledHeader","header","Div","H1","h1","H4","h4","StyledLink","Link","Header","siteTitle","style","margin","defaultProps","Layout","children","data","_856328897","Fragment","components_Header","site","siteMetadata","title","maxWidth","padding","paddingTop","Date","getFullYear","href","doc","kind","definitions","operation","name","variableDefinitions","variable","directives","selectionSet","selections","arguments","loc","start","end","source","body","locationOffset","line","column","definitionRefs","findOperation","i","length","element","forEach","def","refs","Set","collectFragmentReferences","node","add","selection","operationName","newDoc","hasOwnProperty","opRefs","allRefs","newRefs","refName","size","prevRefs","has","childRef","op","push","oneQuery"],"mappings":"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","file":"component---src-pages-create-link-js-7ad618093f451e1565bc.js","sourcesContent":["import React, { Component } from \"react\"\nimport { Mutation } from \"react-apollo\"\nimport POST_MUTATION from \"./createLink.graphql\"\n\nimport styled from \"styled-components\"\n\nconst StyledInput = styled.input``\n\nconst StyledDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nclass CreateLink extends Component {\n  state = {\n    description: \"\",\n    url: \"\",\n  }\n\n  render() {\n    const { description, url } = this.state\n    return (\n      <div>\n        <StyledDiv>\n          <StyledInput\n            className=\"mb2\"\n            value={description}\n            onChange={e => this.setState({ description: e.target.value })}\n            type=\"text\"\n            placeholder=\"A description for the link\"\n          />\n          <StyledInput\n            className=\"mb2\"\n            value={url}\n            onChange={e => this.setState({ url: e.target.value })}\n            type=\"text\"\n            placeholder=\"The URL for the link\"\n          />\n        </StyledDiv>\n        <Mutation mutation={POST_MUTATION} variables={{ description, url }}>\n          {postMutation => <button onClick={postMutation}>Submit</button>}\n        </Mutation>\n      </div>\n    )\n  }\n}\n\nexport default CreateLink\n","import React, { Component } from 'react'\nimport { Link } from 'gatsby'\nimport Layout from \"../components/layout\"\n\nimport CreateLink from '../components/Link/CreateLink'\n\nexport default class CreateLinkPage extends Component {\n    render() {\n        return (\n            <Layout>\n                <CreateLink />\n                <Link to=\"/\">Back</Link>\n            </Layout>\n        )\n    }\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport styled from 'styled-components'\n\nconst StyledHeader = styled.header`\n  background: orange;\n  margin-bottom: 1.45rem;\n`;\n\nconst Div = styled.div`\n  margin: 0 auto;\n  max-width: 960;\n  padding: 1.45rem 1.0875rem;\n`;\n\nconst H1 = styled.h1`\n  margin: 0;\n`;\nconst H4 = styled.h4`\n  margin: 0;\n`;\n\nconst StyledLink = styled(Link)`\n  color: white;\n  text-decoration: none;\n`;\n\nconst Header = ({ siteTitle }) => (\n  <StyledHeader>\n    <Div>\n      <H1 style={{ margin: 0 }}>\n        <StyledLink to=\"/\">\n          {siteTitle}\n        </StyledLink>\n      </H1>\n      <StyledLink to=\"/CreateLink/\"><H4>NEW POST <span> ✏️</span></H4></StyledLink>\n      <StyledLink to=\"/search/\"><H4>Search <span> 🔎</span></H4></StyledLink>\n    </Div>\n  </StyledHeader>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./Header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0px 1.0875rem 1.45rem`,\n          paddingTop: 0,\n        }}\n      >\n        <main>{children}</main>\n        <footer>\n          © {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"mutation\",\"name\":{\"kind\":\"Name\",\"value\":\"PostMutation\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"description\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"url\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"post\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"description\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"description\"}}},{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"url\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"url\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"createdAt\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"url\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"description\"},\"arguments\":[],\"directives\":[]}]}}]}}],\"loc\":{\"start\":0,\"end\":173}};\n    doc.loc.source = {\"body\":\"mutation PostMutation($description: String!, $url: String!) {\\n    post(description: $description, url: $url) {\\n      id\\n      createdAt\\n      url\\n      description\\n    }\\n  }\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"PostMutation\"] = oneQuery(doc, \"PostMutation\");\n        \n"],"sourceRoot":""}